#!/usr/bin/env tmux

# =====================================
# CORE SETTINGS
# =====================================

# Terminal and colors
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",xterm-256color:Tc,tmux-256color:Tc,screen-256color:Tc"
set -g default-shell /opt/homebrew/bin/fish

# General behavior
set -g mouse on
set -g focus-events on
set -g history-limit 50000
set -g display-time 4000
set -g status-interval 1
set -g set-clipboard on
set -sg escape-time 0
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename on
set -g automatic-rename-format '#(basename "#{pane_current_path}")'

# Vi mode
setw -g mode-keys vi
set -g status-keys vi

# =====================================
# PREFIX KEYS
# =====================================

# Primary prefix: Alt+a
set -g prefix M-a
unbind-key C-b
bind-key M-a send-prefix

# Secondary prefix: Ctrl+t (Zellij-style)
set -g prefix2 C-t
bind-key C-t send-prefix -2

# =====================================
# STATUS BAR
# =====================================

set -g status-position top
set -g status-left-length 50
set -g status-right-length 100
setw -g window-status-separator ""
set -g pane-border-status off
setw -g clock-mode-style 24

# =====================================
# COPY MODE
# =====================================

# Enter copy mode
bind -n C-x copy-mode
bind Enter copy-mode
bind [ copy-mode

# Copy mode bindings
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Search in copy mode
bind -T copy-mode-vi / command-prompt -i -p "search:" "send -X search-forward-incremental '%%'"
bind -T copy-mode-vi ? command-prompt -i -p "search:" "send -X search-backward-incremental '%%'"
bind -T copy-mode-vi n send -X search-again
bind -T copy-mode-vi N send -X search-reverse

# =====================================
# WINDOW MANAGEMENT
# =====================================

# Create and navigation
bind c new-window -c "#{pane_current_path}"
bind -n M-n new-window -c "#{pane_current_path}"
bind -n C-h previous-window
bind -n C-l next-window
bind n next-window
bind p previous-window

# Window management
bind w choose-window
bind & kill-window
bind W command-prompt "rename-window '%%'"
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# =====================================
# PANE MANAGEMENT - SPLIT & CREATE
# =====================================

# Split panes (keep current path)
bind | split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# =====================================
# PANE MANAGEMENT - NAVIGATION
# =====================================

# Alt + hjkl navigation
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Alt + arrows navigation
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

# Prefix + hjkl navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Other pane navigation
bind o select-pane -t :.+
bind -n M-Tab last-pane
bind q display-panes -d 2000
bind t display-panes

# =====================================
# PANE MANAGEMENT - RESIZE & ZOOM
# =====================================

# Resize with prefix
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Zoom/fullscreen
bind z resize-pane -Z
bind -n M-f resize-pane -Z

# Layout management
bind Space next-layout
bind -n M-[ previous-layout
bind -n M-] next-layout

# Other pane operations
bind x kill-pane
bind N command-prompt "select-pane -T '%%'"
bind m setw synchronize-panes

# =====================================
# MODAL KEYBINDINGS (Zellij-style)
# =====================================

# Pane mode (Ctrl+p)
bind -n C-p switch-client -T pane
bind -T pane n split-window -c "#{pane_current_path}" \; switch-client -T root
bind -T pane d split-window -v -c "#{pane_current_path}" \; switch-client -T root
bind -T pane r split-window -h -c "#{pane_current_path}" \; switch-client -T root
bind -T pane f resize-pane -Z \; switch-client -T root
bind -T pane x kill-pane \; switch-client -T root
bind -T pane c command-prompt -I "#T" "select-pane -T '%%'" \; switch-client -T root
bind -T pane h select-pane -L \; switch-client -T root
bind -T pane j select-pane -D \; switch-client -T root
bind -T pane k select-pane -U \; switch-client -T root
bind -T pane l select-pane -R \; switch-client -T root
bind -T pane Enter switch-client -T root
bind -T pane Escape switch-client -T root

# Resize mode (Ctrl+n)
bind -n C-n switch-client -T resize
bind -T resize h resize-pane -L 5 \; switch-client -T resize
bind -T resize j resize-pane -D 5 \; switch-client -T resize
bind -T resize k resize-pane -U 5 \; switch-client -T resize
bind -T resize l resize-pane -R 5 \; switch-client -T resize
bind -T resize H resize-pane -L 1 \; switch-client -T resize
bind -T resize J resize-pane -D 1 \; switch-client -T resize
bind -T resize K resize-pane -U 1 \; switch-client -T resize
bind -T resize L resize-pane -R 1 \; switch-client -T resize
bind -T resize Enter switch-client -T root
bind -T resize Escape switch-client -T root

# Tab mode (Ctrl+b)
bind -n C-b switch-client -T tab
bind -T tab c new-window -c "#{pane_current_path}" \; switch-client -T root
bind -T tab n next-window \; switch-client -T root
bind -T tab p previous-window \; switch-client -T root
bind -T tab x kill-window \; switch-client -T root
bind -T tab r command-prompt -I "#W" "rename-window '%%'" \; switch-client -T root
bind -T tab s setw synchronize-panes \; switch-client -T root
bind -T tab 1 select-window -t :=1 \; switch-client -T root
bind -T tab 2 select-window -t :=2 \; switch-client -T root
bind -T tab 3 select-window -t :=3 \; switch-client -T root
bind -T tab 4 select-window -t :=4 \; switch-client -T root
bind -T tab 5 select-window -t :=5 \; switch-client -T root
bind -T tab Enter switch-client -T root
bind -T tab Escape switch-client -T root

# Move mode (Ctrl+m)
bind -n C-m switch-client -T move
bind -T move h swap-pane -t '{left-of}' \; switch-client -T root
bind -T move j swap-pane -t '{down-of}' \; switch-client -T root
bind -T move k swap-pane -t '{up-of}' \; switch-client -T root
bind -T move l swap-pane -t '{right-of}' \; switch-client -T root
bind -T move Enter switch-client -T root
bind -T move Escape switch-client -T root

# Session mode (Ctrl+o)
bind -n C-o switch-client -T session
bind -T session w choose-session \; switch-client -T root
bind -T session d detach-client \; switch-client -T root
bind -T session s new-session \; switch-client -T root
bind -T session Enter switch-client -T root
bind -T session Escape switch-client -T root

# =====================================
# SESSION MANAGEMENT
# =====================================

bind S choose-session
bind s new-session
bind D detach-client
bind ( switch-client -p
bind ) switch-client -n

# =====================================
# UTILITY BINDINGS
# =====================================

# Config reload and refresh
bind r source-file ~/.tmux.conf \; run-shell '~/.tmux/scripts/auto-theme.sh' \; display-message "Config reloaded"
bind R refresh-client

# Theme controls
bind T run-shell '~/.tmux/scripts/auto-theme.sh toggle'
bind L run-shell '~/.tmux/scripts/auto-theme.sh'

# =====================================
# THEME & APPEARANCE
# =====================================

# Load theme based on macOS appearance
run-shell '~/.tmux/scripts/auto-theme.sh'

# Auto-update theme on focus events
set-hook -g client-attached 'run-shell "~/.tmux/scripts/auto-theme.sh"'
set-hook -g client-session-changed 'run-shell "~/.tmux/scripts/auto-theme.sh"'

# =====================================
# PLUGINS
# =====================================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugin configurations
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @yank_selection "clipboard"
set -g @yank_selection_mouse "clipboard"

# Initialize TPM (keep at bottom)
run '~/.tmux/plugins/tpm/tpm'